// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu component should render menu component in a container 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="css-9ksv1k"
      >
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
        </div>
        <icon-mock
          classname="css-80khr3"
        />
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
        </div>
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
          <div
            class="css-12wx08y"
          >
            <div
              class="css-i8jcl2"
              role="button"
            >
              <icon-mock />
              <icon-mock
                classname="css-1eldwbg"
                role="button"
              />
            </div>
          </div>
          <div
            class="css-12wx08y"
          >
            <div
              class="css-i8jcl2"
              role="button"
            >
              <icon-mock />
              <icon-mock
                classname="css-1eldwbg"
                role="button"
              />
            </div>
          </div>
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
        </div>
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-12wx08y"
          >
            <div
              class="css-i8jcl2"
              role="button"
            >
              <icon-mock />
              <icon-mock
                classname="css-1eldwbg"
                role="button"
              />
            </div>
          </div>
        </div>
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
        </div>
        <icon-mock
          classname="css-80khr3"
        />
        <div
          class="css-1r7jtto"
        >
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
          <div
            class="css-8d2ymx"
            role="button"
          >
            <icon-mock />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-9ksv1k"
    >
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
      </div>
      <icon-mock
        classname="css-80khr3"
      />
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
      </div>
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
        <div
          class="css-12wx08y"
        >
          <div
            class="css-i8jcl2"
            role="button"
          >
            <icon-mock />
            <icon-mock
              classname="css-1eldwbg"
              role="button"
            />
          </div>
        </div>
        <div
          class="css-12wx08y"
        >
          <div
            class="css-i8jcl2"
            role="button"
          >
            <icon-mock />
            <icon-mock
              classname="css-1eldwbg"
              role="button"
            />
          </div>
        </div>
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
      </div>
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-12wx08y"
        >
          <div
            class="css-i8jcl2"
            role="button"
          >
            <icon-mock />
            <icon-mock
              classname="css-1eldwbg"
              role="button"
            />
          </div>
        </div>
      </div>
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
      </div>
      <icon-mock
        classname="css-80khr3"
      />
      <div
        class="css-1r7jtto"
      >
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
        <div
          class="css-8d2ymx"
          role="button"
        >
          <icon-mock />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
